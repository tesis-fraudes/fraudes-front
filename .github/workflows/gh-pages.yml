name: Deploy to AWS S3 + CloudFront

on:
  push:
    branches:
      - main

permissions:
  contents: read
  id-token: write  # Para OIDC con AWS

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Write .env from secret
        run: |
          printf '%s\n' "${{ secrets.CI_DEV_ENV }}" > .env

      - name: Build frontend
        run: pnpm run build

      # Opción 2: Usar secrets tradicionales (comentado)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy to S3
        run: |
          # Subir archivos estáticos con cache largo
          aws s3 sync ./out/_next/static s3://fraudes-front/_next/static \
            --cache-control "max-age=31536000,immutable" \
            --delete
          
          # Subir otros archivos con cache corto
          aws s3 sync ./out s3://fraudes-front \
            --exclude "_next/static/*" \
            --cache-control "max-age=0,must-revalidate" \
            --delete

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"

      # Opcional: Notificación a Slack/Discord
      - name: Notify deployment success
        if: success()
        run: |
          echo "✅ Deployment successful to AWS S3 + CloudFront"
